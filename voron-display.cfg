[mcu menu]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_210006800C43303848373220-if00
restart_method: command

[temperature_sensor MiniDisplay]
sensor_type: temperature_mcu
sensor_mcu: menu
min_temp: 10
max_temp: 100

[display]
lcd_type: uc1701
kill_pin: menu:PF0
spi_bus: spi1
cs_pin: menu:PA4
a0_pin: menu:PA2
rst_pin: menu:PA3
contrast: 63
encoder_pins: ^menu:PA0, ^menu:PA1
click_pin: ^!menu:PB1

[output_pin BEEPER_pin]
pin: menu:PF1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000

[gcode_macro M300]
gcode:
# Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
# Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE={S} CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

# name of neopixel should match name referenced in printer.cfg
# if there are other gcode_macros referencing the led display (e.g delayed gcode_macro)
[neopixel fysetc_mini12864]
pin: menu:PA13
chain_count: 3
color_order: RGB
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0

#   Set RGB values on boot up for each Neopixel.
#   Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3
